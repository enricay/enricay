name: Build and Trigger Octopus

on:
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create Content File
        run: |
          mkdir output
          echo "This is created from GitHub Action and zipped and sent to Octopus. Octopus now deploys it from Account A to Account B" > output/info.txt

      - name: Zip File
        run: zip -r output.zip output/

      - name: Install Octopus CLI via apt
        run: |
          sudo apt update
          sudo apt install -y gnupg curl ca-certificates apt-transport-https
          # Add Octopus APT key
          curl -sSfL https://apt.octopus.com/public.key \
            | sudo gpg --dearmor -o /usr/share/keyrings/octopus.com.gpg
          # Add Octopus repo
          echo "deb [signed-by=/usr/share/keyrings/octopus.com.gpg] https://apt.octopus.com stable main" \
            | sudo tee /etc/apt/sources.list.d/octopus.com.list
          sudo apt update
          sudo apt install -y octopuscli
      

      - name: Push Package to Octopus
        run: |
          octo push \
            --server "${{ secrets.OCTOPUS_SERVER }}" \
            --apiKey "${{ secrets.OCTOPUS_API_KEY }}" \
            --package output.zip \
            --packageId github-artifact \
            --space "crossaccountdeployments"

      - name: Create Octopus Release
        run: |
          octo create-release \
            --server "${{ secrets.OCTOPUS_SERVER }}" \
            --apiKey "${{ secrets.OCTOPUS_API_KEY }}" \
            --project "CrossAccountS3Uploader" \
            --version "1.${{ github.run_number }}" \
            --space "crossaccountdeployments" \
            --package github-artifact:output.zip

      - name: Deploy Octopus Release
        run: |
          octo deploy-release \
            --server "${{ secrets.OCTOPUS_SERVER }}" \
            --apiKey "${{ secrets.OCTOPUS_API_KEY }}" \
            --project "CrossAccountS3Uploader" \
            --space "crossaccountdeployments" \
            --version "1.${{ github.run_number }}" \
            --deployTo "Staging"

